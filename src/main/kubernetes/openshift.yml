apiVersion: v1
kind: Service
metadata:
  name: search-backend
  labels:
    app: search-backend
    app.kubernetes.io/name: search-backend
    app.kubernetes.io/component: datastore
    app.kubernetes.io/part-of: search-quarkus-io
    app.kubernetes.io/managed-by: quarkus
spec:
  ports:
    - name: http
      port: 9200
      protocol: TCP
    - name: inter-node
      protocol: TCP
      port: 9300
  selector:
    app.kubernetes.io/name: search-backend
  type: ClusterIP
  # Using a StatefulSet, each pod has its own immutable address,
  # so we don't need the service to have an IP.
  clusterIP: None
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: search-backend
  labels:
    app: search-backend
    app.kubernetes.io/name: search-backend
    app.kubernetes.io/component: datastore
    app.kubernetes.io/part-of: search-quarkus-io
    app.kubernetes.io/managed-by: quarkus
# See https://www.hafifbilgiler.com/hafif-bilgiler/elasticsearch-installation-on-openshift/
spec:
  serviceName: search-backend
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: search-backend
  template:
    metadata:
      labels:
        app: search-backend
        app.kubernetes.io/name: search-backend
        app.kubernetes.io/component: datastore
        app.kubernetes.io/part-of: search-quarkus-io
        app.kubernetes.io/managed-by: quarkus
    spec:
      containers:
        - name: search-backend
          image: elasticsearch:8.10.2
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 500Mi
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /_cluster/health?local=true
              port: 9200
            initialDelaySeconds: 5
          ports:
            - name: http
              containerPort: 9200
              protocol: TCP
            - name: inter-node
              containerPort: 9300
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /usr/share/elasticsearch/data
          env:
            - name: cluster.name
              value: search-quarkus-io
            - name: node.name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            # https://www.elastic.co/guide/en/elasticsearch/reference/current/important-settings.html#discovery-settings
            # Rely on OpenShift's internal DNS to address the other hosts
            - name: discovery.seed_hosts
              value: "search-backend-0.search-backend,search-backend-1.search-backend,search-backend-2.search-backend"
            - name: cluster.initial_master_nodes
              value: "search-backend-0,search-backend-1,search-backend-2"
            # Not exposed to the internet, no sensitive data
            # => We don't bother with HTTPS and pesky self-signed certificates
            - name: xpack.security.enabled
              value: "false"
            - name: bootstrap.memory_lock
              value: "true"
            # https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#_configure_and_start_the_cluster
            - name: ES_PORT
              value: 127.0.0.1:9200
          envFrom:
            - configMapRef:
                name: search-backend-config
            - secretRef:
                name: search-backend-secrets
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app: search-backend
          app.kubernetes.io/name: search-backend
          app.kubernetes.io/component: datastore
          app.kubernetes.io/part-of: search-quarkus-io
          app.kubernetes.io/managed-by: quarkus
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "gp2"
        resources:
          requests:
            storage: 1Gi
  triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - search-backend
        from:
          kind: ImageStreamTag
          name: elasticsearch:8.10.2
---
apiVersion: "v1"
kind: "ImageStream"
metadata:
  name: elasticsearch
  labels:
    app.kubernetes.io/name: search-backend
    app.kubernetes.io/component: datastore
    app.kubernetes.io/part-of: search-quarkus-io
    app.kubernetes.io/managed-by: quarkus
spec:
  tags:
    - name: 8.10.2
      from:
        kind: DockerImage
        name: docker.elastic.co/elasticsearch/elasticsearch:8.10.2